@model Tuan06.Models.Product

@{
  ViewData["Title"] = "Thêm sản phẩm";
  var categories = ViewBag.Categories as List<Tuan06.Models.Category>;
}
<h2 class="mb-4 text-primary">Thêm sản phẩm mới</h2>

<form asp-area="Admin" asp-action="Create" method="post" enctype="multipart/form-data">
  @Html.AntiForgeryToken()

  <div class="form-group mb-3">
    <label asp-for="ProductName" class="control-label">Tên sản phẩm</label>
    <input asp-for="ProductName" class="form-control" />
    <span asp-validation-for="ProductName" class="text-danger"></span>
  </div>

  <div class="form-group mb-3">
    <label asp-for="Price" class="control-label">Giá</label>
    <input asp-for="Price" class="form-control" />
    <span asp-validation-for="Price" class="text-danger"></span>
  </div>

  <div class="form-group mb-3">
    <label asp-for="DiscountPrice" class="control-label">Giá khuyến mãi</label>
    <input asp-for="DiscountPrice" class="form-control" />
    <span asp-validation-for="DiscountPrice" class="text-danger"></span>
  </div>

  <div class="form-group mb-3">
    <label>Hình ảnh</label>
    <input type="file" name="ProductImage" class="form-control" />
  </div>

  <div class="form-group mb-3">
    <label asp-for="Quantity" class="control-label">Số lượng tồn</label>
    <input asp-for="Quantity" class="form-control" />
    <span asp-validation-for="Quantity" class="text-danger"></span>
  </div>

  <div class="form-group mb-3">
    <label asp-for="ProductDescription" class="control-label">Mô tả</label>
    <textarea asp-for="ProductDescription" class="form-control" id="ProductDescription"></textarea>
    <span asp-validation-for="ProductDescription" class="text-danger"></span>
  </div>

  <div class="form-group mb-3">
    <label>Tên danh mục</label>
    <div class="input-group">
      <select name="CategoryID" id="categorySelect" class="form-control">
        <option value="">-- Chọn danh mục --</option>
        @if (categories != null) {
          foreach (var cat in categories) {
            <option value="@cat.CategoryID">@cat.CategoryName</option>
          }
        }
      </select>
      <span class="input-group-btn">
        <button type="button" id="btnShowAddCategory" class="btn btn-success">
          + Thêm danh mục
        </button>
      </span>
    </div>
    <span asp-validation-for="CategoryID" class="text-danger"></span>

    <div id="addCategoryForm" class="mt-3" style="display: none;">
      <div class="input-group">
        <input type="text" id="newCategoryName" class="form-control" placeholder="Nhập tên danh mục mới" />
        <span class="input-group-btn">
          <button type="button" id="btnAddCategorySave" class="btn btn-primary">Lưu</button>
          <button type="button" id="btnAddCategoryCancel" class="btn btn-secondary">Hủy</button>
        </span>
      </div>
    </div>
  </div>

  <button type="submit" class="btn btn-success mt-3">Lưu sản phẩm</button>
</form>

@section Scripts {
  <partial name="_ValidationScriptsPartial" />

  <script>
    $(document).ready(function () {
      // ✅ Kích hoạt CKEditor
      CKEDITOR.replace("ProductDescription");

      // 1. Xử lý hiển thị/ẩn form thêm danh mục
      $('#btnShowAddCategory').click(function () {
        $('#addCategoryForm').slideDown(); // Hiển thị form thêm
        $(this).hide(); // Ẩn nút "Thêm danh mục"
      });

      $('#btnAddCategoryCancel').click(function () {
        $('#addCategoryForm').slideUp(function() { // Ẩn form thêm
          $('#newCategoryName').val(''); // Xóa nội dung đã nhập
        });
        $('#btnShowAddCategory').show(); // Hiển thị lại nút "Thêm danh mục"
      });

      // 2. Xử lý thêm danh mục qua AJAX (Nút "Lưu" trong form inline)
      $('#btnAddCategorySave').click(function () {
        var name = $('#newCategoryName').val().trim();
        if (name === '') {
          alert('Vui lòng nhập tên danh mục!');
          return;
        }

        var token = $('input[name="__RequestVerificationToken"]').val();

        $.ajax({
          url: '/Admin/Category/AddCategory',
          type: 'POST',
          contentType: 'application/json',
          headers: {
            'RequestVerificationToken': token
          },
          data: JSON.stringify({ CategoryName: name }),
          success: function (data) {
            if (data.success) {
              alert('Đã thêm danh mục mới!');
              var select = $('#categorySelect'); // Dùng ID mới

              // Thêm option mới, chọn nó và kích hoạt sự kiện thay đổi
              select.append(new Option(data.name, data.id, true, true)).trigger('change');

              // Ẩn form và hiện lại nút
              $('#addCategoryForm').slideUp(function() {
                $('#newCategoryName').val('');
              });
              $('#btnShowAddCategory').show();

            } else {
              alert(data.message || 'Thêm thất bại!');
            }
          },
          error: function (err) {
            console.error('Lỗi AJAX:', err);
            alert('Đã xảy ra lỗi khi kết nối đến máy chủ.');
          }
        });
      });
    });
  </script>
}
